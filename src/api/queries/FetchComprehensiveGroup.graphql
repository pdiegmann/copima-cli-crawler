query FetchComprehensiveGroup($fullPath: ID!) {
  group(fullPath: $fullPath) {
    id
    name
    path
    fullName
    fullPath
    description
    visibility
    createdAt
    updatedAt
    webUrl
    avatarUrl
    shareWithGroupLock
    requireTwoFactorAuthentication
    twoFactorGracePeriod
    autoDevopsEnabled
    emailsDisabled
    mentionsDisabled
    parent {
      id
      fullPath
      name
      path
      webUrl
    }
    subgroupCreationLevel
    projectCreationLevel
    actualRepositorySizeLimit
    lfsEnabled
    requestAccessEnabled
    complianceFrameworks {
      nodes {
        id
        name
        description
        color
        pipelineConfigurationFullPath
      }
    }
    customEmoji {
      nodes {
        id
        name
        url
      }
    }
    groupMembers {
      nodes {
        id
        accessLevel {
          integerValue
          stringValue
        }
        createdAt
        updatedAt
        expiresAt
        user {
          id
          username
          name
          publicEmail
          state
          webUrl
          avatarUrl
        }
      }
    }
    labels {
      nodes {
        id
        title
        description
        color
        textColor
      }
    }
    milestones {
      nodes {
        id
        title
        description
        state
        dueDate
        startDate
        createdAt
        updatedAt
      }
    }
    packages {
      nodes {
        id
        name
        version
        packageType
        createdAt
        updatedAt
      }
    }
    runners {
      nodes {
        id
        runnerType
        description
        contactedAt
        active
        status
        tagList
      }
    }
    timelogs {
      nodes {
        id
        timeSpent
        spentAt
        summary
        user {
          id
          username
          name
        }
      }
    }
    vulnerabilities {
      nodes {
        id
        title
        description
        state
        severity
        reportType
        detectedAt
        dismissedAt
        resolvedAt
        confirmedAt
      }
    }
    workItemTypes {
      nodes {
        id
        name
        iconName
      }
    }
    rootStorageStatistics {
      storageSize
      repositorySize
      lfsObjectsSize
      buildArtifactsSize
      packagesSize
      snippetsSize
      uploadsSize
      wikiSize
      containerRegistrySize
      dependencyProxySize
    }
    sharedRunnersSetting
    dependencyProxyManifests {
      nodes {
        id
        imageName
        digest
        createdAt
      }
    }
    dependencyProxyBlobs {
      nodes {
        fileName
        size
        createdAt
      }
    }
    dependencyProxySetting {
      enabled
    }
    ciVariables {
      nodes {
        id
        key
        value
        variableType
        protected
        masked
        raw
        environmentScope
      }
    }
  }
}
