metadata:
  name: "GitLab Crawler Test Template"
  description: "Template for creating custom GitLab crawler tests - fill in your actual values"
  version: "1.0.0"
  author: "Your Name"
  tags: ["template", "custom"]
  timeout: 300000 # 5 minutes

gitlab:
  host: "https://git.hnnl.eu" # e.g., "https://gitlab.com" or "https://your-gitlab-instance.com"
  accessToken: "" # Your GitLab personal access token
  refreshToken: "" # Your GitLab refresh token (optional)
  timeout: 30000
  maxConcurrency: 1

  # OAuth2 Configuration (optional - only if using OAuth2 flow)
  oauth2:
    clientId: "bf90360b99376cc65da265e302f74de8dd85dd2ed59f1f86b869643fb7a05b24" # Your OAuth2 client ID
    clientSecret: "gloas-fc04990df4a5fcfaf69a732a5161e9d9bc9b553f0862a3b373599399b7a2ba32" # Your OAuth2 client secret
    redirectUri: "" # Your OAuth2 redirect URI
    scopes:
      - read_api
      - read_repository
      - read_user
      - openid
    type: oidc

execution:
  workingDir: "./tmp/crawler-test-custom" # Directory for test execution
  outputDir: "./tmp/crawler-test-custom/output" # Where output files will be stored
  databasePath: "./tmp/crawler-test-custom/test.db" # SQLite database path
  steps: ["areas", "users", "resources", "repository"] # Which crawler steps to run: areas, users, resources, repository
  testResume: false # Test resume functionality
  testCallbacks: false # Test callback functionality

validation:
  expectedFiles:
    - path: "areas/groups.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "name", "fullPath"]
    - path: "areas/projects.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "name", "fullPath"]
    - path: "users/users.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "username", "name"]

  logs:
    expectedLevels: ["info"]
    requiredMessages:
      - "Starting Step 1.*Crawling areas"
      - "Starting Step 2.*Crawling users"
      - "GitLab crawl completed successfully"
    forbiddenMessages:
      - "FATAL"
      - "CRITICAL"
    maxErrors: 0
    maxWarnings: 5

  performance:
    maxExecutionTime: 120000 # 2 minutes maximum execution time

  dataQuality:
    validateJsonStructure: true
    checkDuplicates: false
    validateRequiredFields: true

cleanup:
  cleanOutputDir: true # Clean up output directory after test
  cleanDatabase: true # Clean up database after test
  cleanLogs: true # Clean up log files after test
  keepOnFailure: false # Keep files if test fails (for debugging)
