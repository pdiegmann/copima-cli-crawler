# Unified Configuration for Copima CLI Crawler
# This file can be used by both auth and test commands

# Test metadata for the testing framework
metadata:
  name: "Comprehensive Copima CLI Crawler Configuration"
  description: "Comprehensive unified configuration testing all crawler steps: areas, users, resources, and repository"
  version: "2.0.0"
  author: "Copima CLI Team"
  tags: ["comprehensive", "unified", "auth", "e2e-test", "all-steps"]
  timeout: 600000 # 10 minutes for comprehensive test

# GitLab API Configuration
gitlab:
  host: "https://git.hnnl.eu"
  # accessToken will be retrieved from database using email lookup
  # Use email lookup for auth compatibility with tests
  email: "phl@hnnl.eu"
  # Alternative: use account ID lookup if you have a specific account ID
  # accountId: "a274ca76-0af3-4048-a30d-ca95caf8944c"
  timeout: 30000
  rateLimit: 10
  maxConcurrency: 1

# Database Configuration
database:
  path: "./database.sqlite"
  walMode: true
  timeout: 5000

# Logging Configuration
logging:
  level: "info"
  format: "json"
  console: true

# Output Configuration
output:
  rootDir: "./output"
  fileNaming: "lowercase"
  prettyPrint: false
  compression: "none"

# Progress Configuration
progress:
  enabled: true
  file: "./progress.yaml"
  interval: 1000
  detailed: true

# Resume Configuration
resume:
  enabled: true
  stateFile: "./resume-state.json"
  autoSaveInterval: 5000

# Callback Configuration
callbacks:
  enabled: false

# Authentication Configuration (legacy format for auth command compatibility)
auth:
  oauth2:
    # Default provider to use when none is specified
    defaultProvider: gitlab

    # Server configuration for the temporary OAuth2 callback server
    server:
      port: 3000 # Port for callback server (default: 3000)
      host: "localhost"
      timeout: 300 # Timeout in seconds (default: 300)
      callbackPath: "/api/auth/oauth2/callback/gitlab"

    # OAuth2 provider configurations (array format for legacy compatibility)
    providers:
      # Main GitLab provider
      - name: gitlab
        clientId: "bf90360b99376cc65da265e302f74de8dd85dd2ed59f1f86b869643fb7a05b24"
        clientSecret: "gloas-fc04990df4a5fcfaf69a732a5161e9d9bc9b553f0862a3b373599399b7a2ba32"
        authorizationUrl: "https://git.hnnl.eu/oauth/authorize"
        tokenUrl: "https://git.hnnl.eu/oauth/token"
        scopes:
          - "read_api"
          - "read_repository"
          - "read_user"
          - "openid"

      # Test GitLab provider
      - name: gitlab-test
        clientId: "bf90360b99376cc65da265e302f74de8dd85dd2ed59f1f86b869643fb7a05b24"
        clientSecret: "gloas-fc04990df4a5fcfaf69a732a5161e9d9bc9b553f0862a3b373599399b7a2ba32"
        authorizationUrl: "https://git.hnnl.eu/oauth/authorize"
        tokenUrl: "https://git.hnnl.eu/oauth/token"
        scopes:
          - "read_api"
          - "read_repository"
          - "read_user"
          - "openid"

      # Development GitLab provider
      - name: gitlab-dev
        clientId: "${GITLAB_DEV_CLIENT_ID}"
        clientSecret: "${GITLAB_DEV_CLIENT_SECRET}"
        authorizationUrl: "https://gitlab-dev.example.com/oauth/authorize"
        tokenUrl: "https://gitlab-dev.example.com/oauth/token"
        scopes:
          - "read_api"
          - "read_user"

# OAuth2 Configuration for E2E Testing (unified format)
oauth2:
  providers:
    gitlab:
      clientId: "bf90360b99376cc65da265e302f74de8dd85dd2ed59f1f86b869643fb7a05b24"
      clientSecret: "gloas-fc04990df4a5fcfaf69a732a5161e9d9bc9b553f0862a3b373599399b7a2ba32"
      redirectUri: "http://localhost:3000/callback"
      authorizationUrl: "https://git.hnnl.eu/oauth/authorize"
      tokenUrl: "https://git.hnnl.eu/oauth/token"
      scopes:
        - "read_api"
        - "read_repository"
        - "read_user"
        - "openid"

    gitlab-test:
      clientId: "bf90360b99376cc65da265e302f74de8dd85dd2ed59f1f86b869643fb7a05b24"
      clientSecret: "gloas-fc04990df4a5fcfaf69a732a5161e9d9bc9b553f0862a3b373599399b7a2ba32"
      redirectUri: "http://localhost:3000/callback"
      authorizationUrl: "https://git.hnnl.eu/oauth/authorize"
      tokenUrl: "https://git.hnnl.eu/oauth/token"
      scopes:
        - "read_api"
        - "read_repository"
        - "read_user"
        - "openid"

    gitlab-dev:
      clientId: "${GITLAB_DEV_CLIENT_ID}"
      clientSecret: "${GITLAB_DEV_CLIENT_SECRET}"
      redirectUri: "http://localhost:3000/callback"
      authorizationUrl: "https://gitlab-dev.example.com/oauth/authorize"
      tokenUrl: "https://gitlab-dev.example.com/oauth/token"
      scopes:
        - "read_api"
        - "read_user"

  server:
    port: 3000
    host: "localhost"
    callbackPath: "/callback"
    timeout: 300

# E2E Test Execution Configuration
execution:
  workingDir: "./tmp/crawler-test-unified"
  outputDir: "./tmp/crawler-test-unified/output"
  databasePath: "./tmp/crawler-test-unified/test.db"
  steps: ["areas", "users", "resources", "repository"]
  testResume: false
  testCallbacks: false

# E2E Test Validation Configuration
validation:
  expectedFiles:
    # Areas step outputs
    - path: "areas/groups.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "name", "fullPath"]
    - path: "areas/projects.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "name", "fullPath"]
    # Users step outputs
    - path: "users/users.jsonl"
      format: "jsonl"
      minRecords: 1
      requiredFields: ["id", "username", "name"]
    # Resources step outputs
    - path: "resources/labels.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "title"]
    - path: "resources/issues.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "title", "state"]
    - path: "resources/boards.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "name"]
    - path: "resources/epics.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "title"]
    - path: "resources/audit_events.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "action"]
    - path: "resources/snippets.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "title"]
    - path: "resources/metadata.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "name"]
    - path: "resources/pipelines.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "status"]
    - path: "resources/releases.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: ["id", "name"]
    - path: "resources/branches.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: []
    # Repository step outputs
    - path: "repository/branches.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: []
    - path: "repository/commits.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: []
    - path: "repository/tags.jsonl"
      format: "jsonl"
      minRecords: 0
      requiredFields: []

  logs:
    expectedLevels: ["info"]
    requiredMessages:
      - "Starting Step 1.*Crawling areas"
      - "Starting Step 2.*Crawling users"
      - "Starting Step 3.*Crawling.*resources"
      - "Starting Step 4.*Crawling repository"
      - "GitLab crawl completed successfully"
    forbiddenMessages:
      - "FATAL"
      - "CRITICAL"
    maxErrors: 0
    maxWarnings: 10

  performance:
    maxExecutionTime: 300000 # 5 minutes for comprehensive test

  dataQuality:
    validateJsonStructure: true
    checkDuplicates: false
    validateRequiredFields: true

# E2E Test Cleanup Configuration
cleanup:
  cleanOutputDir: false
  cleanDatabase: false
  cleanLogs: false
  keepOnFailure: true
