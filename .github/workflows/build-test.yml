name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linting
        run: bun run lint || echo "Linting not configured"

      - name: Run tests with coverage
        run: bun run test:coverage

      - name: Test build process
        run: bun run scripts/build.ts

      - name: Test executables (basic smoke test)
        run: |
          # Test that executables were created and can show help
          if [ -f "dist/copima-cli-windows.exe" ]; then
            echo "✅ Windows executable created"
            file dist/copima-cli-windows.exe
          else
            echo "❌ Windows executable not found"
            exit 1
          fi

          if [ -f "dist/copima-cli-macos-x64" ]; then
            echo "✅ macOS x64 executable created"
            file dist/copima-cli-macos-x64
          else
            echo "❌ macOS x64 executable not found"
            exit 1
          fi

          if [ -f "dist/copima-cli-macos-arm64" ]; then
            echo "✅ macOS ARM64 executable created"
            file dist/copima-cli-macos-arm64
          else
            echo "❌ macOS ARM64 executable not found"
            exit 1
          fi

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executables
          path: dist/
          retention-days: 7

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
