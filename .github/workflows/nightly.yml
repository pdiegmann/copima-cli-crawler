name: Nightly Build

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: "Create a pre-release with nightly builds"
        required: false
        default: "true"
        type: choice
        options:
          - "true"
          - "false"
      release_tag:
        description: "Custom tag for nightly release (default: nightly-YYYYMMDD)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  nightly:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Generate build timestamp
        id: timestamp
        run: |
          echo "BUILD_TIME=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          echo "DATE_ONLY=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Set release tag
        id: tag
        run: |
          if [ -n "${{ github.event.inputs.release_tag }}" ]; then
            echo "TAG=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG=nightly-${{ steps.timestamp.outputs.DATE_ONLY }}" >> $GITHUB_OUTPUT
          fi

      - name: Update version in executables
        run: |
          # Create a temporary version identifier for nightly builds
          BUILD_VERSION="nightly-${{ steps.timestamp.outputs.BUILD_TIME }}"
          echo "Building nightly version: $BUILD_VERSION"

      - name: Build executables
        run: bun run scripts/build.ts

      - name: Rename executables with nightly suffix
        run: |
          cd dist
          mv copima-cli-windows.exe copima-cli-windows-nightly.exe
          mv copima-cli-macos-x64 copima-cli-macos-x64-nightly
          mv copima-cli-macos-arm64 copima-cli-macos-arm64-nightly

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums-nightly.txt
          cat checksums-nightly.txt

      - name: Delete existing nightly release
        if: github.event.inputs.create_release == 'true'
        continue-on-error: true
        run: |
          # Delete existing nightly release if it exists
          gh release delete ${{ steps.tag.outputs.TAG }} --yes || true
          # Delete the tag as well
          git push origin :refs/tags/${{ steps.tag.outputs.TAG }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Nightly Release
        if: github.event.inputs.create_release == 'true'
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          release_name: Nightly Build ${{ steps.timestamp.outputs.BUILD_TIME }}
          draft: false
          prerelease: true
          body: |
            ## 🌙 Nightly Build

            **Build Time**: ${{ steps.timestamp.outputs.BUILD_TIME }} UTC
            **Commit**: ${{ github.sha }}
            **Branch**: ${{ github.ref_name }}

            ⚠️ **This is a pre-release nightly build** - Use at your own risk!

            ### Downloads

            | Platform | Architecture | Download |
            |----------|--------------|----------|
            | Windows | x64 | [copima-cli-windows-nightly.exe](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-windows-nightly.exe) |
            | macOS | Intel (x64) | [copima-cli-macos-x64-nightly](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-macos-x64-nightly) |
            | macOS | Apple Silicon (ARM64) | [copima-cli-macos-arm64-nightly](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-macos-arm64-nightly) |

            ### Installation

            #### Windows
            ```bash
            curl -L -o copima-cli-nightly.exe https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-windows-nightly.exe
            ./copima-cli-nightly.exe --help
            ```

            #### macOS
            ```bash
            # Intel Macs
            curl -L -o copima-cli-nightly https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-macos-x64-nightly
            chmod +x copima-cli-nightly
            ./copima-cli-nightly --help

            # Apple Silicon Macs
            curl -L -o copima-cli-nightly https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/copima-cli-macos-arm64-nightly
            chmod +x copima-cli-nightly
            ./copima-cli-nightly --help
            ```

            ### Verification

            Verify the integrity using checksums: [checksums-nightly.txt](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.TAG }}/checksums-nightly.txt)

            ### Recent Changes

            Changes since last release:
            ```
            git log --oneline --since="1 day ago"
            ```

      - name: Upload Windows Executable
        if: github.event.inputs.create_release == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/copima-cli-windows-nightly.exe
          asset_name: copima-cli-windows-nightly.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS x64 Executable
        if: github.event.inputs.create_release == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/copima-cli-macos-x64-nightly
          asset_name: copima-cli-macos-x64-nightly
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 Executable
        if: github.event.inputs.create_release == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/copima-cli-macos-arm64-nightly
          asset_name: copima-cli-macos-arm64-nightly
          asset_content_type: application/octet-stream

      - name: Upload Checksums
        if: github.event.inputs.create_release == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/checksums-nightly.txt
          asset_name: checksums-nightly.txt
          asset_content_type: text/plain

      - name: Upload build artifacts (if not creating release)
        if: github.event.inputs.create_release != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: nightly-executables-${{ steps.timestamp.outputs.BUILD_TIME }}
          path: dist/
          retention-days: 7

      - name: Summary
        run: |
          echo "## Nightly Build Complete 🌙" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Time**: ${{ steps.timestamp.outputs.BUILD_TIME }} UTC" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag**: ${{ steps.tag.outputs.TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ github.event.inputs.create_release }}" == "true" ]; then
            echo "✅ **Pre-release created**: [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ steps.tag.outputs.TAG }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "📦 **Artifacts uploaded**: Available for 7 days" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Executables Built:" >> $GITHUB_STEP_SUMMARY
          echo "- copima-cli-windows-nightly.exe" >> $GITHUB_STEP_SUMMARY
          echo "- copima-cli-macos-x64-nightly" >> $GITHUB_STEP_SUMMARY
          echo "- copima-cli-macos-arm64-nightly" >> $GITHUB_STEP_SUMMARY
